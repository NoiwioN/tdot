DROP DATABASE IF EXISTS LETS_WICHTEL;

CREATE DATABASE LETS_WICHTEL;

USE LETS_WICHTEL;

CREATE TABLE IF NOT EXISTS WICHTEL (
ID_Wichtel INT PRIMARY KEY AUTO_INCREMENT,
CreatedAt DATETIME DEFAULT now(),
Name VARCHAR(30) NOT NULL,
URL VARCHAR(35) NOT NULL UNIQUE,
MaxPrice SMALLINT NOT NULL DEFAULT 0,
Private BOOLEAN NOT NULL,
Password VARCHAR(65),
Started BOOLEAN DEFAULT false
);

CREATE TABLE IF NOT EXISTS ORT (
ID_Ort INT PRIMARY KEY AUTO_INCREMENT,
PLZ SMALLINT NOT NULL,
Ort VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS ACCOUNT (
ID_Account INT PRIMARY KEY AUTO_INCREMENT,
CreatedAt DATETIME DEFAULT now(),
Firstname VARCHAR(20) NOT NULL,
Lastname VARCHAR(20) NOT NULL,
Email VARCHAR(50) NOT NULL UNIQUE,
Password VARCHAR(65) NOT NULL,
Address VARCHAR(40) NOT NULL,
Ort_ID INT,
FOREIGN KEY (Ort_ID) REFERENCES ORT(ID_Ort)
ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS ROLE (
ID_Role INT PRIMARY KEY AUTO_INCREMENT,
Name VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS WICHTEL_ACCOUNT_INFO (
ID_Wichtel_Account_Info INT PRIMARY KEY AUTO_INCREMENT,
Account_ID INT NOT NULL,
Wichtel_ID INT NOT NULL,
Partner INT DEFAULT NULL,
Wunschliste VARCHAR(250),
FOREIGN KEY (Account_ID) REFERENCES ACCOUNT(ID_Account)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Wichtel_ID) REFERENCES WICHTEL(ID_Wichtel)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Partner) REFERENCES ACCOUNT(ID_Account)
ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS WICHTEL_ACCOUNT_ROLE (
ID_Wichtel_Account_Role INT PRIMARY KEY AUTO_INCREMENT,
CreatedAt DATETIME DEFAULT now(),
Account_ID INT NOT NULL,
Wichtel_ID INT NOT NULL,
Role_ID INT NOT NULL DEFAULT 1,
FOREIGN KEY (Account_ID) REFERENCES ACCOUNT(ID_Account)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Wichtel_ID) REFERENCES WICHTEL(ID_Wichtel)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (Role_ID) REFERENCES ROLE(ID_Role)
ON DELETE NO ACTION ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PASSWORD_RESET (
ID_Reset INT PRIMARY KEY AUTO_INCREMENT,
Account_ID INT NOT NULL,
Valid BOOLEAN NOT NULL,
ValidUntil DATETIME NOT NULL DEFAULT now(),
Token VARCHAR(40) NOT NULL,
FOREIGN KEY (Account_ID) REFERENCES ACCOUNT(ID_Account)
ON DELETE CASCADE ON UPDATE CASCADE
);

DELIMITER //
CREATE TRIGGER set_valid_until
BEFORE INSERT ON PASSWORD_RESET
FOR EACH ROW
BEGIN
    SET NEW.ValidUntil = DATE_ADD(NOW(), INTERVAL 1 HOUR);
END;
//
DELIMITER ;

DROP USER IF EXISTS admin@'%';

CREATE USER admin@'%'
IDENTIFIED BY "S!cur!&P@ssword1";
GRANT SELECT, UPDATE, INSERT, DELETE ON LETS_WICHTEL.* TO 'admin'@'%';

INSERT INTO ROLE (Name) VALUES
("User"),
("Administrator"),
("Moderator");